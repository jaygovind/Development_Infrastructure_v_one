name: CI/CD - Nx + Railway (Per-app Dockerfile)

on:
  push:
    branches: [main]
  pull_request:

env:
  CI: "true"
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  docker:
    name: Build & Push Docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/api:latest
            ghcr.io/${{ github.repository_owner }}/api:${{ github.run_number }}

      - name: Build & push Web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/web/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/web:latest
            ghcr.io/${{ github.repository_owner }}/web:${{ github.run_number }}

  deploy:
    name: Deploy API + Web
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, web]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy via Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          set -e
          retries=3

          if [ "${{ matrix.service }}" == "api" ]; then
            SERVICE_ID=896433a2-649c-4d47-b397-1c2e4918b4fe
          else
            SERVICE_ID=651af99c-48dd-4d98-85f4-a0bc78710924
          fi

          until [ $retries -le 0 ]; do
            echo "Deploying ${{ matrix.service }} from root context..."
            if railway up --ci --service $SERVICE_ID .; then
              echo "Deployment succeeded!"
              break
            fi
            retries=$((retries-1))
            echo "Retrying deploy for ${{ matrix.service }}... ($retries left)"
            sleep 10
          done

          if [ $retries -le 0 ]; then
            echo "Deployment failed after multiple attempts!"
            exit 1
          fi
