name: Nx CI

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: nx-ci-${{ github.ref }}
  cancel-in-progress: true

# Shared env for all jobs
env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ tolower(github.repository_owner) }}
  CI: "true"
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  # Disable cloud if token is empty
  NX_DISABLE_CLOUD: ${{ secrets.NX_CLOUD_ACCESS_TOKEN == '' && 'true' || 'false' }}

jobs:
  verify:
    name: Lint • Test • Build (affected only)
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nx needs history for affected

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Set Nx SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Print affected (build)
        run: npx nx print-affected --target=build --select=projects || true

      - name: Lint (affected)
        run: npx nx affected -t lint --parallel=3

      - name: Test (affected)
        run: npx nx affected -t test --parallel=3 --configuration=ci || true

      - name: Build (affected)
        run: npx nx affected -t build --parallel=3

  docker:
    name: Build & Push Docker (only on main)
    needs: verify
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push API
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/api:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/api:${{ github.run_number }}

      - name: Build & push Web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/web/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/web:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/web:${{ github.run_number }}
