name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: nx-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read

# Shared ENV (available to all jobs)
env:
  CI: "true"
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_DISABLE_CLOUD: ${{ secrets.NX_CLOUD_ACCESS_TOKEN == '' && 'true' || 'false' }}
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ tolower(github.repository_owner) }}

jobs:
  verify:
    name: Nx • Lint • Test • Build (affected)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0
      # Uncomment if you’ve run `nx connect` and want task distribution
       run: npx nx start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci --legacy-peer-deps

      - uses: nrwl/nx-set-shas@v4

      # Record logs to Nx Cloud (optional) by prefixing with `nx-cloud record --`
      - run: npx nx affected -t lint test build

      # Self-healing CI suggestions (non-blocking)
      - run: npx nx fix-ci
        if: always()

  docker:
    name: Build & Push Docker (main only)
    needs: verify
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      api-digest: ${{ steps.push-api.outputs.digest }}
      web-digest: ${{ steps.push-web.outputs.digest }}

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push API
        id: push-api
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/api:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/api:${{ github.run_number }}

      - name: Build & push Web
        id: push-web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/web/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/web:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/web:${{ github.run_number }}

  release-info:
    name: Release Info
    needs: docker
    if: needs.docker.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Print image digests
        run: |
          echo "API digest: ${{ needs.docker.outputs.api-digest }}"
          echo "Web digest: ${{ needs.docker.outputs.web-digest }}"
      # Example: trigger deploy using the image refs above
      # - name: Deploy to Railway
      #   run: railway up --service api --image ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/api:latest
