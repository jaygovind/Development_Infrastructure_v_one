services:
  db:
    image: postgres:16
    container_name: app_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # host 5433 -> container 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app}"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: app_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY: "False"
      PGADMIN_CONFIG_ALLOW_SPECIAL_EMAIL_DOMAINS: '["local","test","localhost"]'
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped
    # (optional persistence)
    # volumes:
    #   - pgadmin_data:/var/lib/pgadmin

  minio:
    image: minio/minio:latest
    container_name: app_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_API_PORT:-9002}:9000"     # API
      - "${MINIO_CONSOLE_PORT:-9011}:9001" # Console
    restart: unless-stopped

  # App layer ko jab chahiye tab chalao:
  api:
    profiles: ["app"]
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: app_api
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgres://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-app}@db:5432/${POSTGRES_DB:-appdb}
      JWT_SECRET: ${JWT_SECRET:-dev_secret}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-uploads}
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "4000:4000"
    restart: unless-stopped

  web:
    profiles: ["app"]
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: app_web
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://api:4000
    depends_on:
      - api
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  pg_data:
  minio_data:
  # pgadmin_data:
